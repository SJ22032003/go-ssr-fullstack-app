// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.648
package dialog

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

type Dialog struct {
	Title         string
	Description   string
	confirmScript templ.ComponentScript
}

func NewDialog(title string, description string) *Dialog {
	return &Dialog{
		Title:       title,
		Description: description,
	}
}

func (d *Dialog) ShowModal() templ.ComponentScript {
	return showModal(d)
}

func (d *Dialog) CloseModal() templ.ComponentScript {
	return closeModal()
}

func showModal(d *Dialog) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_showModal_b890`,
		Function: `function __templ_showModal_b890(d){const modal = document.getElementById('my-modal');
  if (modal) {
    const modalTitle = document.getElementById('modal-title');
    const modalDescription = document.getElementById('modal-description');
    modalTitle.textContent = d.Title;
    modalDescription.textContent = d.Description;
    modal.showModal();
  }
}`,
		Call:       templ.SafeScript(`__templ_showModal_b890`, d),
		CallInline: templ.SafeScriptInline(`__templ_showModal_b890`, d),
	}
}

func closeModal() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_closeModal_1058`,
		Function: `function __templ_closeModal_1058(){const modal = document.getElementById('my-modal');
  if (modal) {
    const modalTitle = document.getElementById('modal-title');
    const modalDescription = document.getElementById('modal-description');
    modalTitle.textContent = '';
    modalDescription.textContent = '';
    modal.close();
  }
}`,
		Call:       templ.SafeScript(`__templ_closeModal_1058`),
		CallInline: templ.SafeScriptInline(`__templ_closeModal_1058`),
	}
}

func Modal() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templ.WriteWatchModeString(templ_7745c5c3_Buffer, 1)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, closeModal())
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.WriteWatchModeString(templ_7745c5c3_Buffer, 2)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 templ.ComponentScript = closeModal()
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var2.Call)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.WriteWatchModeString(templ_7745c5c3_Buffer, 3)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
