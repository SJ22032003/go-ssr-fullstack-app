package goals_views

import (
	"encoding/json"
	"fmt"
	"log"
	model "github.com/SJ22032003/go-fullstack/model"
)

func dataPayloadForModal(goal model.Goal) string {
	data := map[string]interface{}{
		"title": 	"Remove Goal",
		"description": goal.Name,
		"id":   goal.Id,
	}
	jsonData, err := json.Marshal(data)
	if err != nil {
		log.Fatalf("Error marshalling data: %v", err)
	}
	return string(jsonData)
}

templ GoalItem(goal model.Goal) {
	<li
		id={ fmt.Sprintf("goal-id-%v", goal.Id) }
		class="text-lg text-gray-800 border-b border-gray-300 py-2 px-4 bg-slate-50 flex justify-between items-center my-2"
	>
		<span class="text-dark-500">{ goal.Name }</span>
		<button
			class="btn btn-error text-white"
			hx-delete={ fmt.Sprintf("/public/goals/delete-goal/%v", goal.Id) }
			hx-swap="outerHTML"
			hx-target="closest li"
			hx-disabled-elt="this"
			hx-on::confirm="openModalForGoalRemoving(event)"
			data-action={ dataPayloadForModal(goal) }
		>Remove</button>
	</li>
	<script>
			function openModalForGoalRemoving(e) {
				e.preventDefault();
				window.openModal(e)
			}
		</script>
}
